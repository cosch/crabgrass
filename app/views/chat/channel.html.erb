<%
remote_url = {:controller => 'chat', :action => 'say', :id => @channel}

loading_command = %(
  msg_text = $('entryfield').value.replace(/</g, "&lt;").replace(/>/g, '&gt;');
  msg = '<div class="message tmp" id="tmp_msg">' + time_and_name + '<span class="content">' + msg_text + '</span></div>';
  $('entryfield').value = ''; 
  $('entryfield').focus;
  new Insertion.Bottom('stage', msg);
  $('conversation').scrollTop = $('conversation').scrollHeight + $('conversation').clientHeight; )

complete = "eval(request.responseText)"
%>

<%= javascript_tag '
var chat_user_count = 0;

function set_chat_user_count(count)
{
  chat_user_count=count;
  if( chat_user_count == 1){slower_polling()};
  if( chat_user_count > 1){normal_polling()};
}
'%>

<div id="userlist">
  <%= render :partial => 'chat/userlist' %>
</div>

<div id="conversation">
  <div id="stage">
    <% for message in @messages -%>
    <%= message_content(message) %>
    <% end -%>
  </div>
</div>

<%= javascript_tag scroll_conversation_script %>
<%= javascript_tag set_time_and_name_script %>

<% form_remote_tag(:url => remote_url, :loading => loading_command, :complete => complete, :html => {:id => "chat_say_form"}) do %>
<table id="typebox" cellpadding='0' cellspacing='0'>
<tr>
  <td width="1%" id='handle'><%= current_user.login %></td>
  <td width="99%">
    <% default_text = I18n.t(:type_your_messages_here) -%>
    <textarea id="entryfield" name="message" rows="2"
      onkeypress="if (enterPressed(event)) {document.getElementById('chat_say_form').onsubmit();}"
      onclick="if (this.value == '<%=default_text%>') {this.clear();}"><%= default_text %></textarea>
    <input type="submit" value="Say" style="display: none;" />
  </td>
</tr>
</table>
<% end -%>

<p>
<% form_tag(:action => :leave_channel, :id => @channel) do %>
  <input type='submit' value='<%= I18n.t(:leave_channel)%>' onclick='stop_ajax()' />
<% end %>

<%# use <%# to comment
<%#<% form_tag() do %>
<%#  <p> pollers </p>
<%#  <input type='button' value='slower' onclick='slower_polling()' />
<%#  <input type='button' value='normal' onclick='normal_polling()' />
<%#<% end %>
</p>

<%=
link = link_to I18n.t(:chat_archive_link), {:action => :archive, :id => @channel.name}
content_tag(:p, link, :class => 'small_icon book_open_16')
%>

<%= # update the user list
wait_time = 4
named_periodically_call_remote( :name => "user_list_poller",
                                :url => { :controller => 'chat',
                                          :action => 'user_list',
                                          :id => @channel},
                                :frequency => wait_time,
                                :update => 'userlist',
                                :condition => 'stop_ajax_calls == false')
%>

<%= # poll server every wait_time seconds for new messages
wait_time = 3
named_periodically_call_remote( :name => "channel_poller",
                                :url => { 
                                   :controller => 'chat',
                                   :action => 'poll_channel_for_updates',
                                   :id => @channel},
                                :frequency => wait_time,
                                :complete => "eval(request.responseText)",
                                :condition => 'stop_ajax_calls == false')

%>

<%= # update server if user has been typing
wait_time = 6
observe_field(:entryfield,
              :frequency => wait_time,
              :url => { :controller => 'chat',
                        :action => 'user_is_typing',
                        :id => @channel },
              :condition => 'stop_ajax_calls == false')
%>

<%= # normal polling if user has been typing
observe_field(:entryfield,
              :frequency => 1, :function => "normal_polling()")
%>

<%= javascript_tag '
var stop_ajax_calls = false;
function stop_ajax(){stop_ajax_calls = true;}
'%>

<%= javascript_tag '
var poll_multiplier=1;
var poll_multiplier_max=100;
var user_list_poll_time=4;
var channel_poll_time=3;

function slower_polling()
{
  if (poll_multiplier>=poll_multiplier_max) {return;}
  poll_multiplier +=5;
  
  replace_user_list_poller(user_list_poll_time*poll_multiplier);  
  replace_channel_poller(channel_poll_time*poll_multiplier);
}

function normal_polling()
{
  poll_multiplier=1;
  replace_user_list_poller(user_list_poll_time);  
  replace_channel_poller(channel_poll_time);
}
'%>

<%=
replace_named_periodically_call_remote( :name => "user_list_poller",
                                        :url => { :controller => 'chat',
                                                  :action => 'user_list',
                                                  :id => @channel },
                                        :update => 'userlist',
                                        :condition => 'stop_ajax_calls == false')

%>

<%=
replace_named_periodically_call_remote( :name => "channel_poller",
                                        :url => { 
                                              :controller => 'chat',
                                              :action => 'poll_channel_for_updates',
                                              :id => @channel},
                                        :complete => "eval(request.responseText)",
                                        :condition => 'stop_ajax_calls == false')


%>